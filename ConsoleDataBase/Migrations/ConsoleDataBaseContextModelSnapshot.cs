// <auto-generated />
using System;
using ConsoleDataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleDataBase.Migrations
{
    [DbContext(typeof(ConsoleDataBaseContext))]
    partial class ConsoleDataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleDataBase.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ClientId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "NY",
                            EMail = "aurora@gmail.com",
                            Name = "Aurora",
                            PhoneNumber = "+1-555-33-22"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Florida",
                            EMail = "oltd@gmail.com",
                            Name = "Ocean LTD",
                            PhoneNumber = "+1-777-33-22"
                        },
                        new
                        {
                            Id = 3,
                            Address = "LA",
                            EMail = "artemida@gmail.com",
                            Name = "Artemida",
                            PhoneNumber = "+1-333-33-11"
                        },
                        new
                        {
                            Id = 4,
                            Address = "NY",
                            EMail = "unicorn@gmail.com",
                            Name = "Unicorn",
                            PhoneNumber = "+1-444-33-11"
                        },
                        new
                        {
                            Id = 5,
                            Address = "LA",
                            EMail = "Pleiades@gmail.com",
                            Name = "Pleiades",
                            PhoneNumber = "+1-888-33-11"
                        });
                });

            modelBuilder.Entity("ConsoleDataBase.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("HiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.HasIndex("TitleId");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1989, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Neil",
                            HiredDate = new DateTime(2023, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Armstrong",
                            OfficeId = 1,
                            TitleId = 4
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1998, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Buzz",
                            HiredDate = new DateTime(2023, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Aldrin",
                            OfficeId = 1,
                            TitleId = 4
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1996, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Catherine",
                            HiredDate = new DateTime(2023, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Coleman",
                            OfficeId = 2,
                            TitleId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1996, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Michael",
                            HiredDate = new DateTime(2023, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Collins",
                            OfficeId = 1,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1996, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ellen",
                            HiredDate = new DateTime(2023, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Baker",
                            OfficeId = 2,
                            TitleId = 5
                        });
                });

            modelBuilder.Entity("ConsoleDataBase.Models.EmployeeProject", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeProjectId");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("money");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            ProjectId = 1,
                            Rate = 1200m,
                            StartedDate = new DateTime(2023, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            ProjectId = 1,
                            Rate = 2000m,
                            StartedDate = new DateTime(2023, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 3,
                            ProjectId = 2,
                            Rate = 2200m,
                            StartedDate = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 4,
                            ProjectId = 2,
                            Rate = 3000m,
                            StartedDate = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            EmployeeId = 5,
                            ProjectId = 3,
                            Rate = 3500m,
                            StartedDate = new DateTime(2023, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            EmployeeId = 1,
                            ProjectId = 4,
                            Rate = 3500m,
                            StartedDate = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            EmployeeId = 2,
                            ProjectId = 4,
                            Rate = 3500m,
                            StartedDate = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            EmployeeId = 3,
                            ProjectId = 5,
                            Rate = 3500m,
                            StartedDate = new DateTime(2023, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            EmployeeId = 4,
                            ProjectId = 5,
                            Rate = 3500m,
                            StartedDate = new DateTime(2023, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConsoleDataBase.Models.Office", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("OfficeId");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Office", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "NY",
                            Title = "Main"
                        },
                        new
                        {
                            Id = 2,
                            Location = "LA",
                            Title = "Office1"
                        },
                        new
                        {
                            Id = 3,
                            Location = "Boston",
                            Title = "Office2"
                        },
                        new
                        {
                            Id = 4,
                            Location = "Ostin",
                            Title = "Office3"
                        },
                        new
                        {
                            Id = 5,
                            Location = "Portland",
                            Title = "Office4"
                        });
                });

            modelBuilder.Entity("ConsoleDataBase.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ProjectId");

                    b.Property<decimal>("Budget")
                        .HasColumnType("money");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("Project", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Budget = 100000m,
                            ClientId = 1,
                            Name = "Project1",
                            StartedDate = new DateTime(2023, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Budget = 200000m,
                            ClientId = 2,
                            Name = "Project2",
                            StartedDate = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Budget = 105000m,
                            ClientId = 3,
                            Name = "Project3",
                            StartedDate = new DateTime(2023, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Budget = 300000m,
                            ClientId = 4,
                            Name = "Project4",
                            StartedDate = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Budget = 400000m,
                            ClientId = 5,
                            Name = "Project5",
                            StartedDate = new DateTime(2023, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConsoleDataBase.Models.Title", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("TitleId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Title", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mr."
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ms."
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mrs."
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sr."
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sra."
                        });
                });

            modelBuilder.Entity("ConsoleDataBase.Models.Employee", b =>
                {
                    b.HasOne("ConsoleDataBase.Models.Office", "Office")
                        .WithMany("Employees")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleDataBase.Models.Title", "Title")
                        .WithMany("Employees")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("ConsoleDataBase.Models.EmployeeProject", b =>
                {
                    b.HasOne("ConsoleDataBase.Models.Employee", "Employee")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleDataBase.Models.Project", "Project")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ConsoleDataBase.Models.Project", b =>
                {
                    b.HasOne("ConsoleDataBase.Models.Client", "Client")
                        .WithOne("Project")
                        .HasForeignKey("ConsoleDataBase.Models.Project", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("ConsoleDataBase.Models.Client", b =>
                {
                    b.Navigation("Project");
                });

            modelBuilder.Entity("ConsoleDataBase.Models.Employee", b =>
                {
                    b.Navigation("EmployeeProjects");
                });

            modelBuilder.Entity("ConsoleDataBase.Models.Office", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ConsoleDataBase.Models.Project", b =>
                {
                    b.Navigation("EmployeeProjects");
                });

            modelBuilder.Entity("ConsoleDataBase.Models.Title", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
